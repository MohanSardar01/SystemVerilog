-------------------------------------
DUT
--------------------------------------
module add(input [7:0] a,b,
           output [8:0] sum);
  
assign sum = a + b;
  
endmodule

----------------------------------------
TESTBENCH
----------------------------------------
class transaction;
  randc bit [7:0] a;
  randc bit [7:0] b;
  bit [8:0] sum;
endclass

class generator;
  mailbox mbx;
  event done;
  transaction t;
  integer i;
  
  function new(mailbox mbx);
    this.mbx = mbx;
  endfunction
  
  task main();
    t = new();
    for(i = 0; i < 20; i++) begin
      t.randomize();
      mbx.put(t);
      $display("[gen]: data send to driver");
      @(done);
      #10;
    end
  endtask
endclass

interface add_intf();
  logic [7:0] a,b;
  logic [8:0] sum;
endinterface

class driver;
  mailbox mbx;
  event done;
  transaction t;
  
  virtual add_intf vif;
  
  function new(mailbox mbx);
    this.mbx = mbx;
  endfunction
  
  task main();
    t = new();
    forever begin
      mbx.get(t);
      vif.a = t.a;
      vif.b = t.b;
      $display("[drv]: data received");
      -> done;
      #10;
    end
  endtask
  
endclass

class moniter;
  mailbox mbx;
  transaction t;
  
  virtual add_intf vif;
  
  function new(mailbox mbx);
    this.mbx = mbx;
  endfunction
  
  task main();
    t = new();
    forever begin
      t.a = vif.a;
      t.b = vif.b;
      t.sum = vif.sum;
      mbx.put(t);
      $display("[MON]: data send to sco");
      #20;
    end
  endtask
endclass

class scoreboard;
  mailbox mbx;
  transaction t;
  bit [8:0] result;
  
  function new(mailbox mbx);
    this.mbx = mbx;
  endfunction
  
  task main();
    t = new();
    forever begin
      mbx.get(t);
      result = t.a + t.b;
      if(result == t.sum)
        $display("TEST PASSED");
      #10;
      else
        $display("TEST FAILED");
      #10;
    end
  endtask
  
endclass

class environmet;
  generator gen;
  driver drv;
  moniter mon;
  scoreboard sco;
  
  mailbox gdmbx;
  mailbox msmbx;
  
  event gddone;
  
  virtual add_intf vif;
  
  function new(mailbox gdmbx, mailbox msmbx);
    
    this.gdmbx = gdmbx;
    this.msmbx = msmbx;
    
    gen = new(gdmbx);
    drv = new(gdmbx);
    mon = new(msmbx);
    sco = new(msmbx);
    
  endfunction
  
  task main();
    gen.done = gddone;
    drv.done = gddone;
    
    drv.vif = vif;
    mon.vif = vif;
    
    fork
      gen.main();
      drv.main();
      mon.main();
      sco.main();
    join_any
    
  endtask
endclass

module tb;
  environment env;
  mailbox gdmbx,msmbx;
  
  add_intf vif();
  
  add dut (vif.a, vif.b, vif.sum);
  
  initial begin
    gdmbx = new();
    msmbx = new();
    
    env = new(gdmbx, msmbx);
    env.vif = vif;
    env.main();
    #500;
    $finish;
  end
endmodule

====================================================================================
-------------------------------- OUTPUT -------------------------------------------
====================================================================================

